using System;
using System.Collections.Generic;
using System.Globalization;
using Telegram.Bot.Types.ReplyMarkups;
using ValeoBot.Services.ValeoApi;
using ValeoBot.Services.ValeoApi.Models;

namespace Valeo.Bot.Services.ValeoKeyboards
{
    public class ValeoKeyboardsService
    {
        /** param1| Command, param2| Keyboard Markup */
        public static readonly ValeoKeyboard DefaultKeyboard = new ValeoKeyboard
        {
            Message = "–í—ñ—Ç–∞—î–º–æ —É Valeo Diagnostic! –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–ø–∏—Å –Ω–∞ –ø—Ä–∏–π–æ–º –¥–æ –ª—ñ–∫–∞—Ä—è —É –Ω–∞—à—ñ–π –∫–ª—ñ–Ω—Ü—ñ. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å *–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –ø—Ä–∏–π–æ–º* –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏.",
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    //InlineKeyboardButton.WithCallbackData("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –¥–æ –ª—ñ–∫–∞—Ä—è üíä", ValeoCommands.Doctors)
                    InlineKeyboardButton.WithUrl("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –ø—Ä–∏–π–æ–º üìù", "https://helsi.me/find-by-organization/2fd443d4-ffaa-493c-872c-5a9322c3237a")
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ù–∞—à—ñ –ª—ñ–∫–∞—Ä—ñ üë®‚Äç‚öïÔ∏è", ValeoCommands.OurDoctors),
                    InlineKeyboardButton.WithCallbackData("–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ ‚úçÔ∏è", "feedback|Feedback")
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ê–¥—Ä–µ—Å–∏ üìç", ValeoCommands.Location),
                    InlineKeyboardButton.WithCallbackData("–ö–æ–Ω—Ç–∞–∫—Ç–∏ üìû", ValeoCommands.Contacts)
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithSwitchInlineQuery("–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å üì¢", "–ó–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å –¥–æ –í–∞–ª–µ–æ Diagnostics! üè•"),
                    InlineKeyboardButton.WithCallbackData("–ü—Ä–æ –Ω–∞—Å üè•", ValeoCommands.About)
                }
            })
        };
        public static readonly ValeoKeyboard SuccessKeyboard = new ValeoKeyboard
        {
            Message = "–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —É –í–∞–ª–µ–æ Diagnostics! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—å –∑ –≤–∞–º–∏ —É –Ω–∞–π–±–ª–∏–∂—á–∏–π —á–∞—Å.",
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
            new InlineKeyboardButton[]
            {
            InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
            },
            })
        };
        public static readonly ValeoKeyboard FailedKeyboard = new ValeoKeyboard
        {
            Message = "–ü—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª—Å—è. –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∞–±–æ —Å–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —Å–ø—Ä–æ–±—É –ø—ñ–∑–Ω—ñ—à–µ.",
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ó–∞–ø–∏—Å–∞—Ç–∏—Å—å –¥–æ –ª—ñ–∫–∞—Ä—è", ValeoCommands.Doctors),
                }
            })
        };
        public static readonly ValeoKeyboard AboutKeyboard = new ValeoKeyboard
        {
            Message = $"–ú–µ–¥–∏—á–Ω–∏–π —Ü–µ–Ω—Ç—Ä *–í–ê–õ–ï–û* –ø—Ä–∞—Ü—é—î –∑ __26 –≤–µ—Ä–µ—Å–Ω—è 2016 —Ä–æ–∫—É__.\n\n" + 
                      $"–ú–∏ –ø—Ä–æ–≤–æ–¥–∏–º–æ –≤—Å—ñ –≤–∏–¥–∏ *—É–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–∏—Ö –¥–æ—Å–ª—ñ–¥–∂–µ–Ω—å (–£–ó–î)* –Ω–∞ —Å—É—á–∞—Å–Ω–æ–º—É –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—ñ —ñ —Å–ø—ñ–≤–ø—Ä–∞—Ü—é—î–º–æ –∑ –Ω–∞–π–Ω–∞–¥—ñ–π–Ω—ñ—à–∏–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—è–º–∏ –≤ –º—ñ—Å—Ç—ñ, —â–æ –≤ –∫–æ–º–ø–ª–µ–∫—Å—ñ –¥–∞—î –≤–∏—Å–æ–∫—É —Ç–æ—á–Ω—ñ—Å—Ç—å –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥—ñ–∞–≥–Ω–æ–∑—É —ñ –≥–∞—Ä–∞–Ω—Ç—ñ—é —É—Å–ø—ñ—à–Ω–æ–≥–æ –ª—ñ–∫—É–≤–∞–Ω–Ω—è.\n\n" +
                      $"–ö—Ä—ñ–º —Ç–æ–≥–æ, –∑–≥—ñ–¥–Ω–æ –∑ —É–≥–æ–¥–æ—é –∑ –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—é –°–ª—É–∂–±–æ—é –ó–¥–æ—Ä–æ–≤‚Äô—è –£–∫—Ä–∞—ó–Ω–∏ –Ω–∞ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –ø–∞—Ü—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–æ—é –º–µ–¥–∏—á–Ω–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π, —É—Å—ñ –∑–∞–∑–Ω–∞—á–µ–Ω—ñ –Ω–∏–∂—á–µ –ø–æ—Å–ª—É–≥–∏ (–ø—Ä–∏ —É–∫–ª–∞–¥–µ–Ω–Ω—ñ –¥–æ–≥–æ–≤–æ—Ä—É –∑ —Å—ñ–º–µ–π–Ω–∏–º –ª—ñ–∫–∞—Ä–µ–º) –≤ –º–µ–¥–∏—á–Ω–æ–º—É —Ü–µ–Ω—Ç—Ä—ñ –í–ê–õ–ï–û –í–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ *–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ*:\n" +
                      $"‚≠ïÔ∏è –ü—Ä–∏–π–æ–º, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —Å—ñ–º–µ–π–Ω–æ–≥–æ –ª—ñ–∫–∞—Ä—è / —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ / –ø–µ–¥—ñ–∞—Ç—Ä–∞ —ñ –π–æ–≥–æ –≤–∏–∫–ª–∏–∫ –¥–æ–¥–æ–º—É (–∑–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ—Å—Ç—é);\n" +
                      $"‚≠ïÔ∏è –ó–∞–≥–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∫—Ä–æ–≤—ñ –∑ –ª–µ–π–∫–æ—Ü–∏—Ç–∞—Ä–Ω–æ—é —Ñ–æ—Ä–º—É–ª–æ—é;\n" +
                      $"‚≠ïÔ∏è –ó–∞–≥–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Å–µ—á—ñ;\n" +
                      $"‚≠ïÔ∏è –ì–ª—é–∫–æ–∑–∞ –∫—Ä–æ–≤—ñ;\n" +
                      $"‚≠ïÔ∏è –ó–∞–≥–∞–ª—å–Ω–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω;\n" +
                      $"‚≠ïÔ∏è –ï–ª–µ–∫—Ç—Ä–æ–∫–∞—Ä–¥—ñ–æ–≥—Ä–∞–º–∞;\n" +
                      $"‚≠ïÔ∏è –í–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è –∞—Ä—Ç–µ—Ä—ñ–∞–ª—å–Ω–æ–≥–æ —Ç–∏—Å–∫—É;\n" +
                      $"‚≠ïÔ∏è –ï–∫—Å–ø—Ä–µ—Å-—Ç–µ—Å—Ç–∏ –Ω–∞ –í–Ü–õ / –≥–µ–ø–ø–∞—Ç—ñ—Ç –í, –° / —Ç—Ä–æ–ø–æ–Ω—ñ–Ω."
            ,
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
                }
            }),
            AlbumImagesPathList = new List<string>(
                new string[]
                {
                    "clinicPhoto/1.jpg",
                    "clinicPhoto/2.jpg",
                    "clinicPhoto/3.jpg",
                    "clinicPhoto/4.jpg",
                    "clinicPhoto/5.jpg",
                    "clinicPhoto/6.jpg",
                    "clinicPhoto/7.jpg",
                }
            )            
        };
        public static readonly ValeoKeyboard FeedbackKeyboard = new ValeoKeyboard
        {
            Message = $"–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à—ñ –≤—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è –ø—Ä–æ —è–∫—ñ—Å—Ç—å –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —É –∫–ª—ñ–Ω—ñ—Ü—ñ.\n",
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
                }
            })
        };
        public static readonly ValeoKeyboard Locationskeyboard = new ValeoKeyboard
        {
            Message = $"*–î–Ωi–ø—Ä–æ*\n–ú–µ–¥–∏—á–Ω–∏–π —Ü–µ–Ω—Ç—Ä *–í–ê–õ–ï–û*\n–≤—É–ª–∏—Ü–∞ –†–∞–±–æ—á–∞, 148, VIII-–±",
            Location = new Location { Latitude = 48.4530569f, Longitude = 35.0029239f } ,
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
                }
            })
        };

        public static readonly ValeoKeyboard DoctorsValeoStaticKeyboard = new ValeoKeyboard
        {
            Message = "–û–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è, –¥–æ —è–∫–æ–≥–æ –±–∞–∂–∞—î—Ç–µ –∑–∞–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –ø—Ä–∏–π–æ–º.",
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithUrl("–°—ñ–º. –ª—ñ–∫–∞—Ä –°–∞—Ñ–æ–Ω–æ–≤ –î.–û.", "https://helsi.me/doctor/9c2f65a7-4c36-49ae-864b-a51bbcfe52f0"),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithUrl("–¢–µ—Ä–∞–ø–µ–≤—Ç –ü–∞–ª–∏–≤–æ–¥–∞ –î.–í.", "https://helsi.me/doctor/dd4d4f9c-0618-4d05-900d-627875bc7ddd"),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithUrl("–ü–µ–¥—ñ–∞—Ç—Ä –ú–∞–∫–∞—Ä—á–µ–Ω–∫–æ –ö.–í.", "https://helsi.me/doctor/dec67dba-fc15-4d2f-971d-4dff8a5e6120"),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithUrl("–¢–µ—Ä–∞–ø–µ–≤—Ç –ö–∞–ª–∏—Ç–∞ –ù.–í.", "https://helsi.me/doctor/757f686e-c28c-4ad5-acd1-71de4c3906d5"),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithUrl("–¢–µ—Ä–∞–ø–µ–≤—Ç –õ—î–æ–Ω–æ–≤–∞ –û.–û.", "https://helsi.me/doctor/8db0a856-cb6e-480b-b9c8-37fbc6df9afe"),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
                },
            })
        };
        public static readonly ValeoKeyboard OurDoctorsKeyboard = new ValeoKeyboard
        {
            Message = "–°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤ –∫–ª—ñ–Ω—ñ–∫–∏ –í–ê–õ–ï–û Diagnostics",
            Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
            {
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–°–∞—Ñ–æ–Ω–æ–≤ –î–µ–Ω–∏—Å –û–ª–µ–≥–æ–≤–∏—á", ValeoCommands.Safonov),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ü–∞–ª–∏–≤–æ–¥–∞ –î–º–∏—Ç—Ä–æ –í–∞—Å–∏–ª—å–æ–≤–∏—á", ValeoCommands.Palivoda),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ú–∞–∫–∞—Ä—á–µ–Ω–∫–æ –ö–∞—Ç–µ—Ä–∏–Ω–∞ –í—ñ–∫—Ç–æ—Ä—ñ–≤–Ω–∞", ValeoCommands.Makarchenko),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ö–∞–ª–∏—Ç–∞ –ù–∞—Ç–∞–ª—è –í—ñ–∫—Ç–æ—Ä—ñ–≤–Ω–∞", ValeoCommands.Kalita),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–õ—î–æ–Ω–æ–≤–∞ –û–∫—Å–∞–Ω–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä—ñ–≤–Ω–∞", ValeoCommands.Leonova),
                },
                new InlineKeyboardButton[]
                {
                    InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
                },
            })
        };
        private static readonly Dictionary<ValeoCommands, ValeoKeyboard> _keybords = new Dictionary<ValeoCommands, ValeoKeyboard>();
        static ValeoKeyboardsService()
        {
            _keybords.Add(ValeoCommands.Default, DefaultKeyboard);
            _keybords.Add(ValeoCommands.Doctors,
                new ValeoKeyboard
                {
                    Message = "*–û–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è*",
                        Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
                            {
                                new InlineKeyboardButton[]
                                {
                                    InlineKeyboardButton.WithCallbackData("–°—ñ–º–µ–π–Ω–∏–π –ª—ñ–∫–∞—Ä", "semdoc|Doctors"),
                                    InlineKeyboardButton.WithCallbackData("–ü–µ–¥—ñ–∞—Ç—Ä", "pediatr|Doctors")
                                },
                                new InlineKeyboardButton[]
                                {
                                    InlineKeyboardButton.WithCallbackData("–¢–µ—Ä–∞–ø–µ–≤—Ç", "terapevt|Doctors"),
                                    InlineKeyboardButton.WithCallbackData("–ï–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥", "endocrin|Doctors")
                                },
                                new InlineKeyboardButton[]
                                {
                                    InlineKeyboardButton.WithCallbackData("–ö–∞—Ä–¥—ñ–æ–ª–æ–≥", "cardiol|Doctors"),
                                    InlineKeyboardButton.WithCallbackData("–ì—ñ–Ω–µ–∫–æ–ª–æ–≥", "ginekol|Doctors")
                                },
                                new InlineKeyboardButton[]
                                {
                                    InlineKeyboardButton.WithCallbackData("–ù–µ–≤—Ä–æ–ø–∞—Ç–æ–ª–æ–≥", "nervopat|Doctors"),
                                    InlineKeyboardButton.WithCallbackData("–ì–∞—Å—Ç—Ä–æ–µ–Ω—Ç–µ—Ä–æ–ª–æ–≥", "gastroin|Doctors")
                                },
                                new InlineKeyboardButton[]
                                {
                                    InlineKeyboardButton.WithCallbackData("–£–ó–î", ValeoCommands.Usi)
                                },
                                new InlineKeyboardButton[]
                                {
                                    InlineKeyboardButton.WithCallbackData("–í—ñ–¥–º—ñ–Ω–∞", ValeoCommands.Default),
                                }
                            })
                });
            _keybords.Add(ValeoCommands.Usi,
                new ValeoKeyboard
                {
                    Message = "*–£–ó–î (–£–ó–Ü)*",
                    Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>
                        {                            
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–û—Ä–≥–∞–Ω–∏ —á–µ—Ä–µ–≤–Ω–æ—ó –ø–æ—Ä–æ–∂–Ω–∏–Ω–∏", "usibrush|UsiInfo"),
                                InlineKeyboardButton.WithCallbackData("–û—Ä–≥–∞–Ω–∏ –∑–∞–æ—á–µ—Ä–µ–≤–∏–Ω–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç–æ—Ä—É", "usizabrush|UsiInfo")
                            },
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–©–∏—Ç–æ–≤–∏–¥–Ω–æ—ó –∑–∞–ª–æ–∑–∏", "usishitov|UsiInfo"),
                                InlineKeyboardButton.WithCallbackData("–ú–æ–ª–æ—á–Ω–æ—ó –∑–∞–ª–æ–∑–∏", "usimoloch|UsiInfo")
                            },
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–ú'—è–∫–∏—Ö —Ç–∫–∞–Ω–∏–Ω", "usimyah|UsiInfo"),
                                InlineKeyboardButton.WithCallbackData("–õ—ñ–º—Ñ–æ–≤—É–∑–ª—ñ–≤", "usilimfous|UsiInfo")
                            },                            
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–û—Ä–≥–∞–Ω—ñ–≤ –º–∞–ª–æ–≥–æ —Ç–∞–∑–∞", "usitasa|UsiInfo"),
                                InlineKeyboardButton.WithCallbackData("–°–µ—Ä—Ü—è", "usiserdsa|UsiInfo")
                            },
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–°—É–¥–∏–Ω –Ω–∏–∂–Ω—ñ—Ö –∫—ñ–Ω—Ü—ñ–≤–æ–∫", "usisosudniz|UsiInfo"),
                                InlineKeyboardButton.WithCallbackData("–°—É–¥–∏–Ω –≤–µ—Ä—Ö–Ω—ñ—Ö –∫—ñ–Ω—Ü—ñ–≤–æ–∫", "usisosudverh|UsiInfo")
                            },
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–°—É–¥–∏–Ω —à–∏—ó —Ç–∞ –≥–æ–ª–æ–≤–∏", "usisosudshei|UsiInfo"),
                                InlineKeyboardButton.WithCallbackData("–ù–µ–π—Ä–æ—Å–æ–Ω–æ–≥—Ä–∞—Ñ—ñ—è", "usineyro|UsiInfo")
                            },
                            new InlineKeyboardButton[]
                            {
                                InlineKeyboardButton.WithCallbackData("–ù–∞–∑–∞–¥", ValeoCommands.Doctors),
                            }
                        })
                });
            _keybords.Add(ValeoCommands.Contacts,
                new ValeoKeyboard
                {
                    Message = 
                        "__–ö–æ–Ω—Ç–∞–∫—Ç–∏ –∫–ª—ñ–Ω—ñ–∫–∏ *–í–ê–õ–ï–û Diagnostics*__\n" + 
                        "\n*–°–∞–π—Ç*: https://valeo.dp.ua/uk" + 
                        "\n*–¢–µ–ª–µ—Ñ–æ–Ω*: +380982323401" + 
                        "\n*–¢–µ–ª–µ—Ñ–æ–Ω*: +380952323400" + 
                        "\n*e-mail*: valeo.diagnostics@ukr.net",
                    Markup = new InlineKeyboardMarkup(new List<InlineKeyboardButton[]>{
                        new InlineKeyboardButton[]
                        {
                            InlineKeyboardButton.WithCallbackData("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è", ValeoCommands.Default),
                        }
                    })
                }
            );
            _keybords.Add(ValeoCommands.About, AboutKeyboard);
            _keybords.Add(ValeoCommands.DoctorsStatic, DoctorsValeoStaticKeyboard);
            _keybords.Add(ValeoCommands.OurDoctors, OurDoctorsKeyboard);
            _keybords.Add(ValeoCommands.Feedback, FeedbackKeyboard);
            _keybords.Add(ValeoCommands.Location, Locationskeyboard);
            _keybords.Add(ValeoCommands.Safonov, ValeoDoctorsKeyboards.Safonov);
            _keybords.Add(ValeoCommands.Kalita, ValeoDoctorsKeyboards.Kalita);
            _keybords.Add(ValeoCommands.Makarchenko, ValeoDoctorsKeyboards.Makarchenko);
            _keybords.Add(ValeoCommands.Palivoda, ValeoDoctorsKeyboards.Palivoda);
            _keybords.Add(ValeoCommands.Leonova, ValeoDoctorsKeyboards.Leonova);
        }

        public ValeoKeyboard GetKeyboard(ValeoCommands command)
        {
            return _keybords[command];
        }
        public ValeoKeyboard CreateDoctorsKeyboard(List<Doctor> doctors)
        {
            List<InlineKeyboardButton[]> rows = new List<InlineKeyboardButton[]>();
            List<InlineKeyboardButton> currentRow = new List<InlineKeyboardButton>();
            for (int i = 1; i < doctors.Count; i++)
            {
                currentRow.Add(InlineKeyboardButton.WithCallbackData($"{doctors[i].FirstName} {doctors[i].LastName}", $"{doctors[i].FirstName}|Times"));
                if (i % 2 == 0)
                {
                    rows.Add(currentRow.ToArray());
                    currentRow.Clear();
                }
            }
            rows.Add(new InlineKeyboardButton[]
            {
                InlineKeyboardButton.WithCallbackData("–ù–∞–∑–∞–¥", ValeoCommands.Doctors),
            });
            return new ValeoKeyboard() { Message = "–û–±–µ—Ä—ñ—Ç—å –ª—ñ–∫–∞—Ä—è", Markup = new InlineKeyboardMarkup(rows) };
        }
        public ValeoKeyboard CreateTimesKeyboard(List<Time> times)
        {
            List<InlineKeyboardButton[]> rows = new List<InlineKeyboardButton[]>();
            List<InlineKeyboardButton> currentRow = new List<InlineKeyboardButton>();
            for (int i = 1; i < times.Count; i++)
            {
                string formatedTime = times[i].Value.ToString("g", CultureInfo.CreateSpecificCulture("es-ES")) 
                                    + " " 
                                    + times[i].Value.DayOfWeek.ToString();
                currentRow.Add(InlineKeyboardButton.WithCallbackData($"{formatedTime}", $"{formatedTime}|Save"));
                if (i % 2 == 0)
                {
                    rows.Add(currentRow.ToArray());
                    currentRow.Clear();
                }
            }
            rows.Add(new InlineKeyboardButton[]
            {
                InlineKeyboardButton.WithCallbackData("–ù–∞–∑–∞–¥", ValeoCommands.Doctors),
            });

            return new ValeoKeyboard() { Message = "–û–±–µ—Ä—ñ—Ç—å —á–∞—Å", Markup = new InlineKeyboardMarkup(rows) };
        }
        public ValeoKeyboard CreateUziInfoKeyboard(string usiInfoId, string description)
        {
            var rows = new InlineKeyboardButton[]
            {
                InlineKeyboardButton.WithCallbackData("–ù–∞–∑–∞–¥", ValeoCommands.Usi),
                InlineKeyboardButton.WithCallbackData("–î–∞–ª—ñ", $"{usiInfoId}|Times")
            };

            return new ValeoKeyboard() { Message = description, Markup = new InlineKeyboardMarkup(rows) };
        }
    }
}